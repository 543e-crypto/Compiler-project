def get_input():
    print("Enter a number:")
    n = input()
    if n < 2:
        print("No primes below 2.")
        return 0  ! Exit early for invalid input
    fi
    return n
fed

def is_prime_with_debug(num):
    print("Checking if:")
    print(num)
    print("is a prime number...")
    local_flag = 1  ! Assume number is prime
    divisor = 2
    while divisor * divisor <= num:
        remainder = num
        while remainder >= divisor:
            remainder = remainder - divisor  ! Simulate modulo
        elihw
        if remainder == 0:
            local_flag = 0  ! Not a prime
        fi
        divisor = divisor + 1
    elihw
    print("Prime check result for:")
    print(num)
    print("is:")
    print(local_flag)
    return local_flag
fed

def add_if_prime(num, total):
    print("Processing number:")
    print(num)
    is_prime = is_prime_with_debug(num)
    if is_prime == 1:
        new_total = total + num
        print("Added:")
        print(num)
        print("to total.")
        return new_total
    fi
    return total
fed

def sum_of_primes(limit):
    total = 0
    current = 2
    while current <= limit:
        total = add_if_prime(current, total)
        current = current + 1
    elihw
    return total
fed

def main_():
    limit = get_input()
    if limit == 0:
        print("Exiting program.")
        return -1
    fi
    total_primes = sum_of_primes(limit)
    print("The sum of all prime numbers up to:")
    print(limit)
    print("is:")
    print(total_primes)
fed

def do_nothing():
    print("doing nothing...")
fed


def do_nothing_1(a,b,c):
    print("printing non sense numbers")
    print(a)
    print(b)
    print(c)
    print("doing nothing...")
fed

print("Starting Advanced Prime Summation Program...")
do_nothing()
a = 12
do_nothing()
b = a-2
a = 100
main_()
print("=== END ===")
print("")
print("")
print("")
do_nothing_1(a,b,88)
do_nothing()
